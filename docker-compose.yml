services:
  backend:
    build: ./api
    container_name: backend
    ports:
      - "8001:8000"
    volumes:
      - shared-data:/data
    networks:
      - app-network
    depends_on:
      kafka:
        condition: service_healthy

  frontend:
    build: ./frontend
    container_name: frontend
    environment:
      - REACT_APP_BASE_URL=127.0.0.1:8001
    ports:
      - "3001:3000"
    volumes:
      - shared-data:/data
    networks:
      - app-network
    depends_on:
      - backend

  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: xmpp2
      POSTGRES_USER: toor
      POSTGRES_PASSWORD: toor
    volumes:
      - ./conf/db/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
      - ./shared-data:/var/lib/postgresql/data
    networks:
      - app-network

  kafka-consumer:
    container_name: kafka-consumer
    build: ./kafka_consumer
    volumes:
      - shared-data:/data
    networks:
      - app-network
    depends_on:
      kafka:
        condition: service_healthy

  kafka:
    container_name: kafka
    image: 'bitnami/kafka:latest'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_HEAP_OPTS=-Xmx512M -Xms512M
    networks:
      - app-network
    healthcheck:
      test: kafka-topics.sh --bootstrap-server kafka:9092 --topic hc --create --if-not-exists && kafka-topics.sh --bootstrap-server kafka:9092 --topic hc --describe
      start_period: 10s
      interval: 5s
      timeout: 10s
      retries: 5
    depends_on:
      - zookeeper

  zookeeper:
    container_name: zookeeper
    image: 'bitnami/zookeeper:latest'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  shared-data:
